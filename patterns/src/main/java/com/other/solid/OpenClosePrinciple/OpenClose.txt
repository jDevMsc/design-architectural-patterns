The principle of openness - close

Classes are open for extension: means that the behavior of an entity can be expanded by creating new types of entities
Classes are closed for change: as a result of the expansion of the behavior of an entity, no changes should be made to the code that this entity uses.

The system should be built in such a way that all its subsequent changes should be implemented by adding new code, and not changing existing ones.


Example
Class a cook who (method) cooks potatoes. If we want to add functionality, do not have to change the cook.
For example, Spanish. pattern strategy for creating different types of food
Cook bob = new Cook ();
bob.MakeDinner (new PotatoMeal ());
bob.MakeDinner (new SaladMeal ());
Closed for changes, but extensible using the interface